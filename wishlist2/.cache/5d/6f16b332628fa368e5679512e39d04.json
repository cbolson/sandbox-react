{"id":"../node_modules/safe-regex-test/index.js","dependencies":[{"name":"/Users/cbolson/Documents/Code/React/wishlist2/package.json","includedInParent":true,"mtime":1676406595480},{"name":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/safe-regex-test/package.json","includedInParent":true,"mtime":1676310166946},{"name":"call-bind/callBound","loc":{"line":3,"column":24,"index":39},"parent":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/safe-regex-test/index.js","resolved":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/call-bind/callBound.js"},{"name":"get-intrinsic","loc":{"line":4,"column":27,"index":90},"parent":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/safe-regex-test/index.js","resolved":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/get-intrinsic/index.js"},{"name":"is-regex","loc":{"line":5,"column":22,"index":130},"parent":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/safe-regex-test/index.js","resolved":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/is-regex/index.js"}],"generated":{"js":"'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/safe-regex-test/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/safe-regex-test/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}}],"sources":{"../node_modules/safe-regex-test/index.js":"'use strict';\n\nvar callBound = require('call-bind/callBound');\nvar GetIntrinsic = require('get-intrinsic');\nvar isRegex = require('is-regex');\n\nvar $exec = callBound('RegExp.prototype.exec');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nmodule.exports = function regexTester(regex) {\n\tif (!isRegex(regex)) {\n\t\tthrow new $TypeError('`regex` must be a RegExp');\n\t}\n\treturn function test(s) {\n\t\treturn $exec(regex, s) !== null;\n\t};\n};\n"},"lineCount":18}},"error":null,"hash":"db51bf8a763960e388ec9ebf165cf34b","cacheData":{"env":{}}}