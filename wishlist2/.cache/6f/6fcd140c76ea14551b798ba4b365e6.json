{"id":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","dependencies":[{"name":"/Users/cbolson/Documents/Code/React/wishlist2/package.json","includedInParent":true,"mtime":1676406595480},{"name":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/jsx-ast-utils/package.json","includedInParent":true,"mtime":1676316202957},{"name":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/jsx-ast-utils/.babelrc","includedInParent":true,"mtime":1676316202957},{"name":".","loc":{"line":17,"column":25,"index":585},"parent":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","resolved":"/Users/cbolson/Documents/Code/React/wishlist2/node_modules/jsx-ast-utils/lib/values/expressions/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLogicalExpression;\n/**\n * Extractor function for a LogicalExpression type value node.\n * A logical expression is `a && b` or `a || b`, so we evaluate both sides\n * and return the extracted value of the expression.\n *\n * @param - value - AST Value object with type `LogicalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromLogicalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n    left = value.left,\n    right = value.right;\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n  if (operator === '&&') {\n    return leftVal && rightVal;\n  }\n  if (operator === '??') {\n    // return leftVal ?? rightVal; // TODO: update to babel 7\n    return leftVal === null || typeof leftVal === 'undefined' ? rightVal : leftVal;\n  }\n  return leftVal || rightVal;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":1,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":1,"column":0}},{"generated":{"line":1,"column":12},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":1,"column":12}},{"generated":{"line":3,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":0},"name":"Object"},{"generated":{"line":3,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":6}},{"generated":{"line":3,"column":7},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":7},"name":"defineProperty"},{"generated":{"line":3,"column":21},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":21}},{"generated":{"line":3,"column":22},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":22},"name":"exports"},{"generated":{"line":3,"column":29},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":29}},{"generated":{"line":3,"column":31},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":31}},{"generated":{"line":3,"column":43},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":43}},{"generated":{"line":3,"column":45},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":3,"column":45}},{"generated":{"line":4,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":4,"column":2},"name":"value"},{"generated":{"line":4,"column":7},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":4,"column":7}},{"generated":{"line":4,"column":9},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":4,"column":9}},{"generated":{"line":5,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":5,"column":0}},{"generated":{"line":5,"column":1},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":5,"column":1}},{"generated":{"line":5,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":5,"column":2}},{"generated":{"line":6,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":0},"name":"exports"},{"generated":{"line":6,"column":7},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":7}},{"generated":{"line":6,"column":8},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":8},"name":"default"},{"generated":{"line":6,"column":15},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":15}},{"generated":{"line":6,"column":18},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":18},"name":"extractValueFromLogicalExpression"},{"generated":{"line":6,"column":51},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":6,"column":51}},{"generated":{"line":7,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":7,"column":0}},{"generated":{"line":8,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":8,"column":0}},{"generated":{"line":9,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":9,"column":0}},{"generated":{"line":10,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":10,"column":0}},{"generated":{"line":11,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":11,"column":0}},{"generated":{"line":12,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":12,"column":0}},{"generated":{"line":13,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":13,"column":0}},{"generated":{"line":14,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":14,"column":0}},{"generated":{"line":15,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":0}},{"generated":{"line":15,"column":9},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":9},"name":"extractValueFromLogicalExpression"},{"generated":{"line":15,"column":42},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":42}},{"generated":{"line":15,"column":43},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":43},"name":"value"},{"generated":{"line":15,"column":48},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":48}},{"generated":{"line":15,"column":50},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":15,"column":50}},{"generated":{"line":16,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":16,"column":2}},{"generated":{"line":17,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":2}},{"generated":{"line":17,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":6},"name":"getValue"},{"generated":{"line":17,"column":14},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":14}},{"generated":{"line":17,"column":17},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":17},"name":"require"},{"generated":{"line":17,"column":24},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":24}},{"generated":{"line":17,"column":25},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":25}},{"generated":{"line":17,"column":28},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":28}},{"generated":{"line":17,"column":29},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":29}},{"generated":{"line":17,"column":30},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":30},"name":"default"},{"generated":{"line":17,"column":37},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":17,"column":37}},{"generated":{"line":18,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":2}},{"generated":{"line":18,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":6},"name":"operator"},{"generated":{"line":18,"column":14},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":14}},{"generated":{"line":18,"column":17},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":17},"name":"value"},{"generated":{"line":18,"column":22},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":22}},{"generated":{"line":18,"column":23},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":23},"name":"operator"},{"generated":{"line":18,"column":31},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":18,"column":31}},{"generated":{"line":19,"column":4},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":6},"name":"left"},{"generated":{"line":19,"column":8},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":10}},{"generated":{"line":19,"column":11},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":13},"name":"value"},{"generated":{"line":19,"column":16},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":18}},{"generated":{"line":19,"column":17},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":19},"name":"left"},{"generated":{"line":19,"column":21},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":19,"column":23}},{"generated":{"line":20,"column":4},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":6},"name":"right"},{"generated":{"line":20,"column":9},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":11}},{"generated":{"line":20,"column":12},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":14},"name":"value"},{"generated":{"line":20,"column":17},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":19}},{"generated":{"line":20,"column":18},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":20},"name":"right"},{"generated":{"line":20,"column":23},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":20,"column":25}},{"generated":{"line":21,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":2}},{"generated":{"line":21,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":6},"name":"leftVal"},{"generated":{"line":21,"column":13},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":13}},{"generated":{"line":21,"column":16},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":16},"name":"getValue"},{"generated":{"line":21,"column":24},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":24}},{"generated":{"line":21,"column":25},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":25},"name":"left"},{"generated":{"line":21,"column":29},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":29}},{"generated":{"line":21,"column":30},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":22,"column":30}},{"generated":{"line":22,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":2}},{"generated":{"line":22,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":6},"name":"rightVal"},{"generated":{"line":22,"column":14},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":14}},{"generated":{"line":22,"column":17},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":17},"name":"getValue"},{"generated":{"line":22,"column":25},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":25}},{"generated":{"line":22,"column":26},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":26},"name":"right"},{"generated":{"line":22,"column":31},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":31}},{"generated":{"line":22,"column":32},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":23,"column":32}},{"generated":{"line":23,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":2}},{"generated":{"line":23,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":6},"name":"operator"},{"generated":{"line":23,"column":14},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":14}},{"generated":{"line":23,"column":19},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":19}},{"generated":{"line":23,"column":23},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":23}},{"generated":{"line":23,"column":25},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":25,"column":25}},{"generated":{"line":24,"column":4},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":26,"column":4}},{"generated":{"line":24,"column":11},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":26,"column":11},"name":"leftVal"},{"generated":{"line":24,"column":18},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":26,"column":18}},{"generated":{"line":24,"column":22},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":26,"column":22},"name":"rightVal"},{"generated":{"line":24,"column":30},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":26,"column":30}},{"generated":{"line":25,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":27,"column":2}},{"generated":{"line":26,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":2}},{"generated":{"line":26,"column":6},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":6},"name":"operator"},{"generated":{"line":26,"column":14},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":14}},{"generated":{"line":26,"column":19},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":19}},{"generated":{"line":26,"column":23},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":23}},{"generated":{"line":26,"column":25},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":28,"column":25}},{"generated":{"line":27,"column":4},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":29,"column":4}},{"generated":{"line":28,"column":4},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":4}},{"generated":{"line":28,"column":11},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":11},"name":"leftVal"},{"generated":{"line":28,"column":18},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":18}},{"generated":{"line":28,"column":23},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":23}},{"generated":{"line":28,"column":27},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":27}},{"generated":{"line":28,"column":31},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":31}},{"generated":{"line":28,"column":38},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":38},"name":"leftVal"},{"generated":{"line":28,"column":45},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":45}},{"generated":{"line":28,"column":50},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":50}},{"generated":{"line":28,"column":61},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":61}},{"generated":{"line":28,"column":64},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":64},"name":"rightVal"},{"generated":{"line":28,"column":72},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":72}},{"generated":{"line":28,"column":75},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":75},"name":"leftVal"},{"generated":{"line":28,"column":82},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":30,"column":82}},{"generated":{"line":29,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":31,"column":2}},{"generated":{"line":30,"column":2},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":32,"column":2}},{"generated":{"line":30,"column":9},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":32,"column":9},"name":"leftVal"},{"generated":{"line":30,"column":16},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":32,"column":16}},{"generated":{"line":30,"column":20},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":32,"column":20},"name":"rightVal"},{"generated":{"line":30,"column":28},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":32,"column":28}},{"generated":{"line":31,"column":0},"source":"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js","original":{"line":33,"column":0}}],"sources":{"../node_modules/jsx-ast-utils/lib/values/expressions/LogicalExpression.js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractValueFromLogicalExpression;\n/**\n * Extractor function for a LogicalExpression type value node.\n * A logical expression is `a && b` or `a || b`, so we evaluate both sides\n * and return the extracted value of the expression.\n *\n * @param - value - AST Value object with type `LogicalExpression`\n * @returns - The extracted value converted to correct type.\n */\nfunction extractValueFromLogicalExpression(value) {\n  // eslint-disable-next-line global-require\n  var getValue = require('.').default;\n  var operator = value.operator,\n      left = value.left,\n      right = value.right;\n\n  var leftVal = getValue(left);\n  var rightVal = getValue(right);\n\n  if (operator === '&&') {\n    return leftVal && rightVal;\n  }\n  if (operator === '??') {\n    // return leftVal ?? rightVal; // TODO: update to babel 7\n    return leftVal === null || typeof leftVal === 'undefined' ? rightVal : leftVal;\n  }\n  return leftVal || rightVal;\n}"},"lineCount":null}},"error":null,"hash":"9ad66d6104a52ce8721812e4924caa9d","cacheData":{"env":{}}}